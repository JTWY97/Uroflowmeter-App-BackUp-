#:import Doctor_LogIn Doctor_LogIn.Doctor_LogIn
#:import Patient_LogIn Patient_LogIn.Patient_LogIn
#:import NewDoctor_SignUp NewUser_Doctor.NewDoctor_SignUp
#:import NewPatient_SignUp NewUser_Patient.NewPatient_SignUp
#:import Welcome_Page WelcomePage.Welcome_Page
#:import DoctorHomePage DoctorHomePage.DoctorHomePage
#:import PatientHomePage PatientHomePage.PatientHomePage
#:import SymptomTracker SymptomTracker.SymptomTracker
#:import FluidIntake FluidIntake.FluidIntake
#:import PatientList PatientList.PatientList
#:import DynamicBladderDiary DynamicBladderDiary.DynamicBladderDiary

ScreenManager:
    id: screen_manager
    Welcome_Page:
        id: Welcome_Page
        name: "Welcome_Page"

    Doctor_LogIn:
        id: Doctor_LogIn
        name: "Doctor_LogIn"
        debug: True
        remember_user: True
        require_email_verification: False
        web_api_key: "AIzaSyBE439nHksT0x_MZ7gaD7rx3GwJh8VIBTM"
        on_login_success:
            if self.login_state == 'in': screen_manager.current = 'DoctorHomePage'
            if self.login_state == 'in': print("User has logged in. Unique identifier is ", self.localId)
            if self.login_state == 'in': app.local_id_doctor = self.localId
            if self.login_state == 'in': app.user_idToken_doctor = self.idToken

    NewDoctor_SignUp:
        id: NewDoctor_SignUp
        name: "NewDoctor_SignUp"
        debug: True
        remember_user: True
        require_email_verification: False
        web_api_key: "AIzaSyBE439nHksT0x_MZ7gaD7rx3GwJh8VIBTM"
        on_login_success:
            if self.login_state == 'in': screen_manager.current = 'DoctorHomePage'
            if self.login_state == 'in': print("User has logged in. Unique identifier is ", self.localId)
            if self.login_state == 'in': app.local_id_doctor = self.localId
            if self.login_state == 'in': app.user_idToken_doctor = self.idToken

    DoctorHomePage:
        id: DoctorHomePage
        name: "DoctorHomePage"

    NewPatient_SignUp:
        id: NewPatient_SignUp
        name: "NewPatient_SignUp"
        debug: True
        remember_user: False
        require_email_verification: False
        web_api_key: "AIzaSyBE439nHksT0x_MZ7gaD7rx3GwJh8VIBTM"
        on_login_success:
            if self.login_state == 'in': screen_manager.current = 'DoctorHomePage'
            if self.login_state == 'in': print("User has logged in. Unique identifier is ", self.localId)
            if self.login_state == 'in': app.local_id_doctor = self.localId
            if self.login_state == 'in': app.user_idToken_doctor = self.idToken

    Patient_LogIn:
        id: Patient_LogIn
        name: "Patient_LogIn"
        debug: True
        remember_user: True
        require_email_verification: False
        web_api_key: "AIzaSyBE439nHksT0x_MZ7gaD7rx3GwJh8VIBTM"
        on_login_success:
            if self.login_state == 'in': screen_manager.current = 'PatientHomePage'
            if self.login_state == 'in': print("User has logged in. Unique identifier is ", self.localId)
            if self.login_state == 'in': app.local_id_patient = self.localId
            if self.login_state == 'in': app.user_idToken_patient = self.idToken

    PatientHomePage:
        id: PatientHomePage
        name: "PatientHomePage"

    SymptomTracker:
        id: SymptomTracker
        name: "SymptomTracker"

    FluidIntake:
        id: FluidIntake
        name: "FluidIntake"
        
    PatientList:
        id: PatientList
        name: "PatientList"
            
    DynamicBladderDiary:
        id: DynamicBladderDiary
        name: "DynamicBladderDiary"